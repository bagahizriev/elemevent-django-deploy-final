# Generated by Django 5.2.1 on 2025-05-14 18:10

import django.db.models.deletion
import events.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgeRestriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Возрастное ограничение',
                'verbose_name_plural': 'Возрастные ограничения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('timezone', models.CharField(default='Europe/Moscow', max_length=50, verbose_name='Часовой пояс')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип мероприятия',
                'verbose_name_plural': 'Типы мероприятий',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(upload_to=events.models.Event._get_upload_path_for_poster, verbose_name='Обложка для карточки')),
                ('cover', models.ImageField(upload_to=events.models.Event._get_upload_path_for_cover, verbose_name='Обложка для страницы')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('venue', models.CharField(max_length=255, verbose_name='Площадка')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('ticket_system', models.CharField(choices=[('DIRECT', 'Прямая ссылка'), ('TICKETSCLOUD', 'TicketsCloud'), ('RADARIO', 'Radario')], default='DIRECT', max_length=20, verbose_name='Система продажи билетов')),
                ('ticket_link', models.URLField(blank=True, help_text="Используется только при выборе типа 'Прямая ссылка'", max_length=255, null=True, verbose_name='Прямая ссылка на билеты')),
                ('ticketscloud_event_id', models.CharField(blank=True, help_text='Например: 6821dfc8b521c11bd5e8e245', max_length=255, null=True, verbose_name='ID события TicketsCloud')),
                ('ticketscloud_token', models.CharField(blank=True, help_text='Например: eyJhbGciOiJIUzI1NiIsImlzcyI6...', max_length=255, null=True, verbose_name='Токен TicketsCloud')),
                ('radario_key', models.CharField(blank=True, help_text='Введите только цифровой ID события (например: 123456)', max_length=255, null=True, verbose_name='ID события Radario')),
                ('vk_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Ссылка на встречу ВК')),
                ('archive_delay', models.IntegerField(choices=[(0, '0 часов'), (1, '1 час'), (2, '2 часа'), (3, '3 часа'), (6, '6 часов'), (12, '12 часов'), (24, '24 часа'), (36, '36 часов')], default=3, verbose_name='Время до архивирования (часов)')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('status', models.CharField(choices=[('DRAFT', 'Черновик'), ('ACTIVE', 'Активно'), ('STOP', 'Приостановлено'), ('CANCEL', 'Отменено')], default='DRAFT', max_length=10, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('age_restriction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='events.agerestriction', verbose_name='Возрастное ограничение')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='events.city', verbose_name='Город')),
                ('event_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='events.eventtype', verbose_name='Тип мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='EventAdvertising',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активно')),
                ('token', models.CharField(max_length=100, verbose_name='ERID токен')),
                ('advertiser_name', models.CharField(max_length=255, verbose_name='Наименование рекламодателя')),
                ('advertiser_inn', models.CharField(max_length=12, verbose_name='ИНН рекламодателя')),
                ('advertiser_ogrn', models.CharField(blank=True, max_length=15, null=True, verbose_name='ОГРН рекламодателя')),
                ('additional_info', models.TextField(blank=True, verbose_name='Дополнительная информация')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='advertising', to='events.event')),
            ],
            options={
                'verbose_name': 'Рекламная информация',
                'verbose_name_plural': 'Рекламная информация',
            },
        ),
        migrations.CreateModel(
            name='EventPush',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Поддерживается HTML разметка', verbose_name='Содержимое пуша')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='push', to='events.event')),
            ],
            options={
                'verbose_name': 'Пуш мероприятия',
                'verbose_name_plural': 'Пуши мероприятий',
            },
        ),
    ]
