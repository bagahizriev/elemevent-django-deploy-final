#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ elemevent"
echo "========================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n${YELLOW}üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "\n${YELLOW}üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.NetIO}}\t{{.BlockIO}}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
echo -e "\n${YELLOW}üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:${NC}"
df -h | grep -E '(Filesystem|/dev/)'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –æ—à–∏–±–æ–∫
echo -e "\n${YELLOW}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:${NC}"
if [ -f "logs/django.log" ]; then
    echo "Django –æ—à–∏–±–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5):"
    tail -5 logs/django.log | grep -i error || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö Django"
fi

echo -e "\nNginx –æ—à–∏–±–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5):"
docker-compose logs --tail=50 nginx | grep -i error | tail -5 || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö Nginx"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
echo -e "\n${YELLOW}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞:${NC}"
source .env
if curl -s -f "https://${DOMAIN}" > /dev/null; then
    echo -e "${GREEN}‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo -e "\n${YELLOW}üîê SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:${NC}"
ssl_info=$(echo | openssl s_client -servername ${DOMAIN} -connect ${DOMAIN}:443 2>/dev/null | openssl x509 -noout -dates 2>/dev/null)
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤–∞–ª–∏–¥–µ–Ω${NC}"
    echo "$ssl_info"
else
    echo -e "${RED}‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${YELLOW}üóÑÔ∏è –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:${NC}"
docker-compose exec db psql -U ${DB_USER} -d ${DB_NAME} -c "SELECT pg_size_pretty(pg_database_size('${DB_NAME}'));" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ë–î"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
echo -e "\n${YELLOW}üíæ –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø:${NC}"
if [ -d "backups" ]; then
    latest_backup=$(ls -t backups/ | head -1 2>/dev/null)
    if [ -n "$latest_backup" ]; then
        echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø: $latest_backup"
        echo "–†–∞–∑–º–µ—Ä: $(du -h "backups/$latest_backup" 2>/dev/null | cut -f1)"
    else
        echo "–ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
else
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backups –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
echo -e "\n${YELLOW}üîÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:${NC}"
if command -v apt &> /dev/null; then
    updates=$(apt list --upgradable 2>/dev/null | wc -l)
    echo "–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–∞–∫–µ—Ç–æ–≤: $((updates-1))"
fi

echo -e "\n${GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"